{"version":3,"sources":["components/order-list/order-list.module.css","components/elements/modal/overlay/modal-overlay.module.css","components/burger/ingredients/group/ingredient-group.module.css","pages/not-found.module.css","pages/order-list.module.css","pages/profile.module.css","components/app/app.module.css","components/header/header.module.css","enums/orderStatuses.ts","enums/routes.ts","enums/types.ts","services/constants/index.ts","services/actions/detailModal.ts","services/hooks.ts","utils/helpers.ts","components/order-short/order-short.tsx","components/order-list/order-list.tsx","config/params.ts","services/actions/app.ts","services/actions/orderHistory.ts","services/hooks/useSocket.ts","pages/Feed.tsx","services/actions/resetPassword.ts","pages/ForgotPassword.tsx","components/burger/ingredients/ingredient-details/ingredient-details.tsx","pages/Ingredient.tsx","utils/auth.ts","services/actions/user.ts","pages/Login.tsx","services/actions/burgerConstructor.ts","services/actions/order.ts","components/elements/modal/overlay/modal-overlay.tsx","components/elements/modal/modal.tsx","components/burger/constructor/item/item.tsx","images/icon-done.svg","components/burger/constructor/order-details/order-details.tsx","components/burger/constructor/burger-constructor.tsx","components/burger/ingredients/ingredient.tsx","components/burger/ingredients/group/ingredient-group.tsx","components/burger/ingredients/list/burger-ingredients.tsx","pages/Main.tsx","pages/NotFound.tsx","pages/OrderList.tsx","components/edit-profile/edit-profile.tsx","components/sidebar/sidebar.tsx","pages/Profile.tsx","pages/Register.tsx","pages/ResetPassword.tsx","components/order-detail/order-detail.tsx","pages/OrderView.tsx","components/burger/ingredients/modal-ingredient-details/model-ingredient-details.tsx","components/elements/protected-route/protected-route.tsx","components/header/app-header.tsx","components/modal-order-detail/modal-order-detail.tsx","components/app/App.tsx","reportWebVitals.ts","services/reducers/app.ts","services/reducers/burgerConstructor.ts","services/reducers/detailModal.ts","services/reducers/order.ts","services/reducers/orderHistory.ts","services/reducers/resetPassword.ts","services/reducers/socket.ts","services/reducers/user.ts","services/reducers/root.ts","services/reducers/index.ts","index.tsx","components/order-short/order-short.module.css","components/order-detail/order-detail.module.css","pages/feed.module.css","components/burger/ingredients/ingredient-details/ingredient-details.module.css","components/burger/constructor/burger-constructor.module.css","components/burger/constructor/order-details/order-details.module.css","components/burger/ingredients/list/burger-ingredients.module.css","components/edit-profile/edit-profile.module.css","components/elements/modal/modal.module.css","components/burger/constructor/item/item.module.css","components/burger/ingredients/ingredient.module.css","pages/login.module.css","pages/main.module.css","components/sidebar/sidebar.module.css"],"names":["module","exports","OrderStatuses","Routes","Types","SET_ERROR","FETCH_INGREDIENTS_SUCCESS","FETCH_INGREDIENTS_ERROR","RESET_ERROR","ADD_INGREDIENT_TO_ORDER","REMOVE_INGREDIENT_FROM_ORDER","RESET_CURRENT_ORDER","MOVE_INGREDIENTS","SET_NUMBER","TOGGLE_MODAL","SET_INGREDIENT","RESET_INGREDIENT","CREATE_ORDER_SUCCESS","CREATE_ORDER_ERROR","SET_ORDER_HISTORY","SET_ORDER_SUCCESS","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_ERROR","CONFIRM_PASSWORD_RESET_SUCCESS","CONFIRM_PASSWORD_RESET_ERROR","SOCKET_OPEN","SOCKET_CLOSE","FETCH_USER_SUCCESS","UPDATE_USER_SUCCESS","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT_SUCCESS","SIGNUP_SUCCESS","toggleModal","value","type","useDispatch","dispatchHook","useSelector","selectorHook","dayjs","extend","isToday","isYesterday","relativeTime","locale","getIngredient","item","position","text","name","id","_id","uniqueId","uuidv4","isLocked","BUN","price","thumbnail","image","setCookie","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","formatDate","date","dayjsDate","zone","format","split","result","fromNow","OrderShort","order","route","history","useHistory","dispatch","location","useLocation","appIngredients","store","app","ingredients","map","ingredient","find","_","url","image_mobile","createdAt","useMemo","cost","reduce","res","current","quantity","length","isDone","status","done","onShowDetails","useCallback","pathname","number","state","modal","className","Styles","onClick","header","created","title","cn","receipt","slice","index","imgBlock","style","left","zIndex","src","alt","more","OrderList","orders","orderContainer","API","setError","error","setOrderHistory","data","useSocket","endpoint","action","socket","useRef","useEffect","WebSocket","close","addEventListener","JSON","parse","compare","a","b","getOrderNumbers","list","filter","FeedPage","orderHistory","sort","pendingOrders","pending","doneOrders","feed","orderList","FEED_VIEW","stats","ordersByStatus","numberList","counterTitle","counter","total","totalToday","confirmResetPassword","form","fetch","method","body","stringify","headers","response","ok","Error","json","success","message","ForgotPasswordPage","isSendForgotPassword","resetPassword","useState","email","setEmail","RESET_PASSWORD","from","container","login","onSubmit","e","preventDefault","input","onChange","target","btnLogin","size","firstLine","to","LOGIN","IngredientDetails","useParams","isModalOpen","composition","calories","proteins","fat","carbohydrates","content","page","img","image_large","i","compositionItem","compositionValue","IngredientPage","params","setIngredient","setTokens","access","refresh","localStorage","setItem","removeTokens","removeItem","updateToken","token","refreshToken","accessToken","loginSuccess","user","signupSuccess","fetchUserSuccess","password","updateUserSuccess","LoginPage","setForm","errorData","SIGNUP","secondLine","FORGOT_PASSWORD","addIngredientToOrder","createOrderSuccess","ModalOverlay","modalOverlay","modalRoot","getElementById","Modal","onClose","children","dialogRef","onKeyPress","code","contains","removeEventListener","createPortal","ref","modalDialog","modalContent","closeButton","ConstructorItem","props","useDrag","collect","monitor","isDragging","drag","useDrop","accept","hover","onHover","drop","isBun","opacity","dragIndex","hoverIndex","moveIngredients","bun","icon","handleClose","OrderDetails","orderNumber","orderTitle","Icon","description","BurgerConstructor","onDrop","isHover","isOver","showModal","setShowModal","mainIngredients","burgerConstructor","currentOrder","totalCost","isOrderEmpty","constructorSection","listEmpty","listEmptyHover","constructorFooter","getItem","ids","Authorization","createOrder","Ingredient","memo","INGREDIENT_VIEW","count","IngredientGroup","group","items","BurgerIngredients","tabs","setTabs","currentTab","setCurrentTab","SAUCE","MAIN","groups","setGroups","detailModal","groupRefs","contentRef","forEach","findIndex","push","tabBlock","tab","active","scrollTop","offsetTop","onChangeTab","tabContent","onScroll","currentTarget","coords","Object","keys","top","coord","ingredientGroup","MainPage","hasIngredients","DndProvider","backend","HTML5Backend","NotFoundPage","OrderListPage","PROFILE_ORDER_VIEW","EditProfile","resetForm","profile","updateUser","placeholder","actions","Sidebar","PROFILE","activeClassName","activeLink","exact","PROFILE_ORDER_LIST","ProfilePage","component","RegisterPage","signup","ResetPasswordPage","onReset","OrderDetail","qty","totalSum","orderDetail","orderName","ingredientName","footer","OrderViewPage","ModalIngredientDetails","ProtectedRoute","rest","render","AppHeader","nav","link","FEED","logo","ModalOrderDetails","splittedRoute","join","App","isUserLoaded","setUserLoaded","init","forbiddenRoutesForLoggedUser","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isConnected","rootReducer","combineReducers","hasBuns","some","existBun","isTop","splice","removeFn","moveFn","dragIngredient","socketReducer","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.9ff3d8f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderContainer\":\"order-list_orderContainer__2Mbrc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"modal-overlay_modalOverlay__2RMl1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"ingredient-group_ingredients__38AI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"not-found_container__heFy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderContainer\":\"order-list_orderContainer__35qQm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__L_OtZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2GidD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\",\"nav\":\"header_nav__2M5Zj\",\"item\":\"header_item__3wYrv\",\"logo\":\"header_logo__1X7aW\",\"link\":\"header_link__3CRBA\",\"activeLink\":\"header_activeLink__1YFvn\",\"navList\":\"header_navList__7Z9bB\",\"brand\":\"header_brand__1d8Qj\"};","enum OrderStatuses {\n  created = 'Создан',\n  pending = 'Готовится',\n  done = 'Выполнен',\n}\n\nexport default OrderStatuses;\n","enum Routes {\n  MAIN = '/',\n  FEED = '/feed',\n  FEED_VIEW = '/feed/:id',\n  LOGIN = '/login',\n  SIGNUP = '/register',\n  FORGOT_PASSWORD = '/forgot-password',\n  RESET_PASSWORD = '/reset-password',\n  PROFILE = '/profile',\n  PROFILE_ORDER_LIST = '/profile/orders',\n  PROFILE_ORDER_VIEW = '/profile/orders/:id',\n  INGREDIENT_VIEW = '/ingredient/:id',\n}\n\nexport default Routes;\n","enum Types {\n  MAIN = 'main',\n  SAUCE = 'sauce',\n  BUN = 'bun',\n}\n\nexport default Types;\n","// App action types\nexport const SET_ERROR: 'SET_ERROR' = 'SET_ERROR';\nexport const FETCH_INGREDIENTS_REQUEST: 'FETCH_INGREDIENTS_REQUEST' = 'FETCH_INGREDIENTS_REQUEST';\nexport const FETCH_INGREDIENTS_SUCCESS: 'FETCH_INGREDIENTS_SUCCESS' = 'FETCH_INGREDIENTS_SUCCESS';\nexport const FETCH_INGREDIENTS_ERROR: 'FETCH_INGREDIENTS_ERROR' = 'FETCH_INGREDIENTS_ERROR';\nexport const RESET_ERROR: 'RESET_ERROR' = 'RESET_ERROR';\n\n// Burger constructor action types\nexport const ADD_INGREDIENT_TO_ORDER: 'ADD_INGREDIENT_TO_ORDER' = 'ADD_INGREDIENT_TO_ORDER';\nexport const REMOVE_INGREDIENT_FROM_ORDER: 'REMOVE_INGREDIENT_FROM_ORDER' = 'REMOVE_INGREDIENT_FROM_ORDER';\nexport const RESET_CURRENT_ORDER: 'RESET_CURRENT_ORDER' = 'RESET_CURRENT_ORDER';\nexport const MOVE_INGREDIENTS: 'MOVE_INGREDIENTS' = 'MOVE_INGREDIENTS';\nexport const SET_NUMBER: 'SET_NUMBER' = 'SET_NUMBER';\n\n// Detail modal action types\nexport const TOGGLE_MODAL: 'TOGGLE_MODAL' = 'TOGGLE_MODAL';\nexport const SET_INGREDIENT: 'SET_INGREDIENT' = 'SET_INGREDIENT';\nexport const RESET_INGREDIENT: 'RESET_INGREDIENT' = 'RESET_INGREDIENT';\n\n// Order action types\nexport const CREATE_ORDER_REQUEST: 'CREATE_ORDER_REQUEST' = 'CREATE_ORDER_REQUEST';\nexport const CREATE_ORDER_SUCCESS: 'CREATE_ORDER_SUCCESS' = 'CREATE_ORDER_SUCCESS';\nexport const CREATE_ORDER_ERROR: 'CREATE_ORDER_ERROR' = 'CREATE_ORDER_ERROR';\n\n// Order history types\nexport const SET_ORDER_HISTORY: 'SET_ORDER_HISTORY' = 'SET_ORDER_HISTORY';\nexport const SET_ORDER_SUCCESS: 'SET_ORDER_SUCCESS' = 'SET_ORDER_SUCCESS';\nexport const SET_ORDER_REQUEST: 'SET_ORDER_REQUEST' = 'SET_ORDER_REQUEST';\nexport const SET_ORDER_FAILED: 'SET_ORDER_FAILED' = 'SET_ORDER_FAILED';\n\n// Reset password action types\nexport const PASSWORD_RESET_REQUEST: 'PASSWORD_RESET_REQUEST' = 'PASSWORD_RESET_REQUEST';\nexport const PASSWORD_RESET_SUCCESS: 'PASSWORD_RESET_SUCCESS' = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_ERROR: 'PASSWORD_RESET_ERROR' = 'PASSWORD_RESET_ERROR';\nexport const CONFIRM_PASSWORD_RESET_REQUEST: 'CONFIRM_PASSWORD_RESET_REQUEST' = 'CONFIRM_PASSWORD_RESET_REQUEST';\nexport const CONFIRM_PASSWORD_RESET_SUCCESS: 'CONFIRM_PASSWORD_RESET_SUCCESS' = 'CONFIRM_PASSWORD_RESET_SUCCESS';\nexport const CONFIRM_PASSWORD_RESET_ERROR: 'CONFIRM_PASSWORD_RESET_ERROR' = 'CONFIRM_PASSWORD_RESET_ERROR';\n\n// Socket action types\nexport const SOCKET_CREATE: 'SOCKET_CREATE' = 'SOCKET_CREATE';\nexport const SOCKET_OPEN: 'SOCKET_OPEN' = 'SOCKET_OPEN';\nexport const SOCKET_CLOSE: 'SOCKET_CLOSE' = 'SOCKET_CLOSE';\nexport const SOCKET_ERROR: 'SOCKET_ERROR' = 'SOCKET_ERROR';\nexport const SOCKET_DATA: 'SOCKET_DATA' = 'SOCKET_DATA';\n\n// User action types\nexport const FETCH_USER_REQUEST: 'FETCH_USER_REQUEST' = 'FETCH_USER_REQUEST';\nexport const FETCH_USER_SUCCESS: 'FETCH_USER_SUCCESS' = 'FETCH_USER_SUCCESS';\nexport const FETCH_USER_ERROR: 'FETCH_USER_ERROR' = 'FETCH_USER_ERROR';\nexport const UPDATE_USER_REQUEST: 'UPDATE_USER_REQUEST' = 'UPDATE_USER_REQUEST';\nexport const UPDATE_USER_SUCCESS: 'UPDATE_USER_SUCCESS' = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_ERROR: 'UPDATE_USER_ERROR' = 'UPDATE_USER_ERROR';\nexport const LOGIN_REQUEST: 'LOGIN_REQUEST' = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS: 'LOGIN_SUCCESS' = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR: 'LOGIN_ERROR' = 'LOGIN_ERROR';\nexport const LOGOUT_REQUEST: 'LOGOUT_REQUEST' = 'LOGOUT_REQUEST';\nexport const LOGOUT_ERROR: 'LOGOUT_ERROR' = 'LOGOUT_ERROR';\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\nexport const SIGNUP_REQUEST: 'SIGNUP_REQUEST' = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS: 'SIGNUP_SUCCESS' = 'SIGNUP_SUCCESS';\nexport const SIGNUP_ERROR: 'SIGNUP_ERROR' = 'SIGNUP_ERROR';\n","import {Ingredient} from '../../types';\nimport {RESET_INGREDIENT, SET_INGREDIENT, TOGGLE_MODAL} from '../constants';\n\nexport interface IResetIngredientAction {\n  readonly type: typeof RESET_INGREDIENT;\n}\n\nexport interface ISetIngredientAction {\n  readonly type: typeof SET_INGREDIENT;\n  readonly ingredient: Ingredient;\n}\n\nexport interface IToggleModalAction {\n  readonly type: typeof TOGGLE_MODAL;\n  readonly value: boolean;\n}\n\nexport type TDetailModalActions =\n  IResetIngredientAction\n  | ISetIngredientAction\n  | IToggleModalAction;\n\nexport const toggleModal = (value: boolean): IToggleModalAction => ({\n  type: TOGGLE_MODAL,\n  value,\n});\n\nexport const setIngredient = (ingredient: Ingredient): ISetIngredientAction => ({\n  type: SET_INGREDIENT,\n  ingredient,\n})\n","import {\n  TypedUseSelectorHook,\n  useDispatch as dispatchHook,\n  useSelector as selectorHook\n} from 'react-redux';\nimport {AppDispatch, AppThunk, TRootStore} from '../types/stores/TRootStore';\n\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\nexport const useSelector: TypedUseSelectorHook<TRootStore> = selectorHook;\n","import dayjs from 'dayjs';\n// @ts-ignore\nimport {v4 as uuidv4} from 'uuid';\nimport {Types} from '../enums';\nimport {ConstructorItem, Ingredient} from '../types';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport isToday from 'dayjs/plugin/isToday';\nimport isYesterday from 'dayjs/plugin/isYesterday';\nimport 'dayjs/locale/ru';\n\ndayjs.extend(isToday);\ndayjs.extend(isYesterday);\ndayjs.extend(relativeTime);\ndayjs.locale('ru');\n\nconst getIngredient = (item: Ingredient, position?: 'top' | 'bottom'): ConstructorItem => {\n  let text: string;\n\n  switch (position) {\n    case 'top':\n      text = `${item.name} (верх)`;\n      break;\n    case 'bottom':\n      text = `${item.name} (низ)`;\n      break;\n    default:\n      text = item.name;\n  }\n\n  return {\n    id: item._id,\n    uniqueId: uuidv4(),\n    type: item.type,\n    position,\n    text,\n    isLocked: item.type === Types.BUN,\n    price: item.price,\n    thumbnail: item.image,\n  }\n};\n\nconst setCookie = (name: string, value: string, options: { [p: string]: any } = {}): void => {\n  options = {\n    path: '/',\n    ...options,\n  };\n\n  if (options.expires instanceof Date) {\n    options.expires = options.expires.toUTCString();\n  }\n\n  let updatedCookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n\n  for (let optionKey in options) {\n    updatedCookie += '; ' + optionKey;\n    let optionValue = options[optionKey];\n    if (optionValue !== true) {\n      updatedCookie += '=' + optionValue;\n    }\n  }\n\n  document.cookie = updatedCookie;\n}\n\nconst deleteCookie = (name: string): void => {\n  setCookie(name, '', {'max-age': -1});\n}\n\nconst getCookie = (name: string): string | undefined => {\n  const matches = document.cookie.match(\n    new RegExp('(?:^|; )' + name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1') + '=([^;]*)'),\n  );\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nconst formatDate = (date: string): string => {\n  const dayjsDate = dayjs(date);\n  const zone = dayjsDate.format('Z')\n    .split(':')[0]\n    .replace('0', '');\n\n  let result = `${dayjsDate.format('HH:mm')} i-GMT${zone}`;\n\n  if (dayjsDate.isToday()) {\n    return `Сегодня, ${result}`;\n  } else if (dayjsDate.isYesterday()) {\n    return `Вчера, ${result}`;\n  }\n\n  return `${dayjsDate.fromNow()}, ${result}`;\n}\n\nexport {\n  getIngredient,\n  setCookie,\n  getCookie,\n  deleteCookie,\n  formatDate,\n};\n","import {CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport cn from 'classnames';\nimport React, {useCallback, useMemo} from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {OrderStatuses, Routes} from '../../enums';\nimport {toggleModal} from '../../services/actions/detailModal';\nimport {useDispatch, useSelector} from '../../services/hooks';\nimport {TOrder} from '../../types/responses/TOrderListResponse';\nimport {formatDate} from '../../utils/helpers';\nimport Styles from './order-short.module.css';\n\ntype TOrderShortProps = {\n  order: TOrder,\n  route: Routes.FEED_VIEW | Routes.PROFILE_ORDER_VIEW,\n}\n\nexport const OrderShort = ({order, route}: TOrderShortProps) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const appIngredients = useSelector(store => store.app.ingredients);\n\n  const ingredients = order.ingredients.map((id) => {\n    const ingredient = appIngredients.find(_ => _._id === id)!;\n    return {\n      url: ingredient.image_mobile,\n      id: ingredient._id,\n      price: ingredient.price\n    }\n  })\n\n  const createdAt = useMemo(() => formatDate(order.createdAt), [order.createdAt]);\n  const cost = useMemo(() => ingredients.reduce((res, current) => res + current.price, 0), [ingredients]);\n  const quantity = useMemo(() => ingredients.length, [ingredients]);\n  const isDone = useMemo(() => OrderStatuses[order.status] === OrderStatuses.done, [order.status]);\n\n  const onShowDetails = useCallback(() => {\n    dispatch(toggleModal(true));\n\n    history.replace({\n      pathname: route.replace(/:id/, `${order.number}`),\n      state: {modal: location},\n    })\n  }, [dispatch, history, location, order.number, route]);\n\n  return (\n    <div className={Styles.order} onClick={onShowDetails}>\n      <div className={Styles.header}>\n        <span>#{order.number}</span>\n        <span className={Styles.created}>{createdAt}</span>\n      </div>\n\n      <div>\n        <div className={Styles.title}>{order.name}</div>\n        <div className={cn({[Styles.done]: isDone})}>{OrderStatuses[order.status]}</div>\n      </div>\n\n      <div className={Styles.receipt}>\n        <div className={Styles.ingredients}>\n          {ingredients.slice(0, 5).map((image, index) => (\n            <div className={Styles.imgBlock} key={`${image.id}-${index}`} style={{\n              left: `${index * 48}px`,\n              zIndex: 5 - index,\n            }}>\n              <img src={image.url} alt={image.id}/>\n            </div>\n          ))}\n          {\n            quantity > 5 &&\n            <div className={cn(Styles.imgBlock, Styles.more)} key={`${ingredients[5].id}-more`} style={{\n              left: `${5 * 48}px`,\n            }}>\n              <img src={ingredients[5].url} alt={ingredients[5].id}/>\n              <span className={Styles.quantity}>+{quantity - 5}</span>\n            </div>\n          }\n        </div>\n        <div className={cn(Styles.cost, 'text', 'text_type_digits-default')}>\n          {cost}\n          <CurrencyIcon type=\"primary\"/>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {Routes} from '../../enums';\nimport {TOrder} from '../../types/responses/TOrderListResponse';\nimport {OrderShort} from '../order-short/order-short';\nimport Styles from './order-list.module.css';\nimport cn from 'classnames';\n\ntype TOrderListProps = {\n  orders: TOrder[];\n  className: string;\n  route: Routes.FEED_VIEW | Routes.PROFILE_ORDER_VIEW,\n}\n\nexport const OrderList = ({orders, className, route}: TOrderListProps) => {\n  return (\n    <div className={cn(Styles.orderContainer, className)}>\n      {orders.map(order => <OrderShort key={order.number} order={order} route={route}/>)}\n    </div>\n  )\n}\n","export const API: string = 'https://norma.nomoreparties.space/api/';\nexport const WS_API: string = 'wss://norma.nomoreparties.space/';\n","import {API} from '../../config/params';\nimport {Ingredient} from '../../types';\nimport {AppDispatch, AppThunk} from '../../types/stores/TRootStore';\nimport {\n  FETCH_INGREDIENTS_ERROR,\n  FETCH_INGREDIENTS_REQUEST,\n  FETCH_INGREDIENTS_SUCCESS,\n  RESET_ERROR,\n  SET_ERROR,\n} from '../constants';\n\nexport interface ISetErrorAction {\n  readonly type: typeof SET_ERROR;\n  readonly error: string;\n}\n\nexport interface IFetchIngredientsRequestAction {\n  readonly type: typeof FETCH_INGREDIENTS_REQUEST;\n}\n\nexport interface IFetchIngredientsSuccessAction {\n  readonly type: typeof FETCH_INGREDIENTS_SUCCESS;\n  readonly ingredients: Ingredient[];\n}\n\nexport interface IFetchIngredientsErrorAction {\n  readonly type: typeof FETCH_INGREDIENTS_ERROR;\n}\n\nexport interface IResetErrorAction {\n  readonly type: typeof RESET_ERROR;\n}\n\nexport type TAppActions =\n  ISetErrorAction\n  | IFetchIngredientsSuccessAction\n  | IFetchIngredientsErrorAction\n  | IFetchIngredientsRequestAction\n  | IResetErrorAction;\n\nexport const setError = (error: string): ISetErrorAction => ({\n  type: SET_ERROR,\n  error,\n});\n\nexport const fetchIngredientsSuccess = (ingredients: Ingredient[]): IFetchIngredientsSuccessAction => ({\n  type: FETCH_INGREDIENTS_SUCCESS,\n  ingredients,\n})\n\nexport const getIngredients: AppThunk = () => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      dispatch({type: FETCH_INGREDIENTS_REQUEST});\n      const response = await fetch(`${API}ingredients`);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const {success, data} = await response.json();\n      if (!success) {\n        throw new Error('Failed parse data');\n      }\n      dispatch(fetchIngredientsSuccess(data));\n    } catch (e) {\n      dispatch({type: FETCH_INGREDIENTS_ERROR});\n      if (e instanceof Error) {\n        dispatch(setError(e.message));\n      }\n    }\n  }\n}\n\n","import {API} from '../../config/params';\nimport {TOrderListResponse} from '../../types/responses';\nimport {TOrder} from '../../types/responses/TOrderListResponse';\nimport {AppDispatch, AppThunk} from '../../types/stores/TRootStore';\nimport {SET_ORDER_SUCCESS, SET_ORDER_FAILED, SET_ORDER_HISTORY, SET_ORDER_REQUEST} from '../constants';\nimport {setError} from './app';\n\nexport interface ISetOrderHistory {\n  readonly type: typeof SET_ORDER_HISTORY;\n  readonly data: TOrderListResponse;\n}\n\nexport interface ISetOrder {\n  readonly type: typeof SET_ORDER_SUCCESS;\n  readonly current: TOrder;\n}\n\nexport interface ISetOrderRequest {\n  readonly type: typeof SET_ORDER_REQUEST;\n}\n\nexport interface ISetOrderFailed {\n  readonly type: typeof SET_ORDER_FAILED;\n}\n\nexport type TOrderHistoryActions =\n  ISetOrderHistory\n  | ISetOrder\n  | ISetOrderRequest\n  | ISetOrderFailed;\n\nexport const setOrderHistory = (data: TOrderListResponse): ISetOrderHistory => ({\n  type: SET_ORDER_HISTORY,\n  data,\n});\n\nexport const setOrder = (current: TOrder): ISetOrder => ({\n  type: SET_ORDER_SUCCESS,\n  current,\n})\n\nexport const fetchOrder: AppThunk = (id: number) => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      dispatch({type: SET_ORDER_REQUEST});\n      const response = await fetch(`${API}orders/${id}`)\n\n      if (!response.ok) {\n        const data = JSON.parse(await response.text());\n        throw new Error(`Error: ${response.status}, ${data.message}`);\n      }\n\n      const {success, orders: data} = await response.json();\n      if (!success || data.length > 1) {\n        throw new Error('Failed parse data');\n      }\n\n      dispatch(setOrder(data[0]));\n    } catch (e) {\n      dispatch({type: SET_ORDER_FAILED});\n      if (e instanceof Error) {\n        dispatch(setError(e.message));\n      }\n    }\n  }\n}\n","import {useEffect, useRef} from 'react';\nimport {WS_API} from '../../config/params';\nimport {SOCKET_CLOSE, SOCKET_OPEN} from '../constants';\nimport {useDispatch} from '../hooks';\n\nexport const useSocket = <TypeAction, TypeReturnAction>(endpoint: string, action: (data: TypeAction) => TypeReturnAction) => {\n  const socket = useRef<WebSocket>();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    socket.current = new WebSocket(`${WS_API}${endpoint}`);\n\n    return () => {\n      socket.current?.close();\n    }\n  }, [endpoint]);\n\n  useEffect(() => {\n    if (!socket.current) {\n      return;\n    }\n\n    socket.current.addEventListener('close', () => {\n      dispatch({type: SOCKET_CLOSE});\n    });\n    socket.current.addEventListener('open', () => {\n      dispatch({type: SOCKET_OPEN});\n    });\n    socket.current.addEventListener('message', ({data}) => {\n      dispatch(action(JSON.parse(data)));\n    });\n  }, [socket, dispatch, action]);\n}\n","import cn from 'classnames';\nimport {useMemo} from 'react';\nimport {OrderList} from '../components/order-list/order-list';\nimport {OrderStatuses, Routes} from '../enums';\nimport {setOrderHistory} from '../services/actions/orderHistory';\nimport {useSelector} from '../services/hooks';\nimport {useSocket} from '../services/hooks/useSocket';\nimport {TOrder} from '../types/responses/TOrderListResponse';\nimport Styles from './feed.module.css';\n\nconst compare = (a: TOrder, b: TOrder) => {\n  if (a.number > b.number) {\n    return -1;\n  }\n  if (a.number < b.number) {\n    return 1;\n  }\n  return 0;\n}\nconst getOrderNumbers = (list: TOrder[], status: OrderStatuses): number[] =>\n  list.filter(order => OrderStatuses[order.status] === status)\n    .map(order => order.number)\n    .slice(0, 30);\n\nexport const FeedPage = () => {\n  useSocket(`orders/all`, setOrderHistory);\n\n  const orderHistory = useSelector(store => store.orderHistory);\n  const list = useMemo(() => orderHistory.orders.sort(compare), [orderHistory.orders]);\n\n  const pendingOrders = useMemo(() => getOrderNumbers(list, OrderStatuses.pending), [list]);\n  const doneOrders = useMemo(() => getOrderNumbers(list, OrderStatuses.done), [list]);\n\n  return (\n    <div>\n      <h1>Лента заказов</h1>\n      <div className={Styles.feed}>\n        <OrderList orders={list} className={Styles.orderList} route={Routes.FEED_VIEW}/>\n        <div className={Styles.stats}>\n          <div className={Styles.ordersByStatus}>\n            <div>\n              <h2>Готовы</h2>\n              <div className={Styles.numberList}>\n                {doneOrders.map(number => <div className={cn(Styles.done, 'text', 'text_type_digits-default')}\n                                               key={number}>{number}</div>)}\n              </div>\n            </div>\n            <div>\n              <h2>В работе</h2>\n              <div className={Styles.numberList}>\n                {pendingOrders.map(number => <span key={number}\n                                                   className={cn('text', 'text_type_digits-default')}>{number}</span>)}\n              </div>\n            </div>\n          </div>\n          <div>\n            <h2 className={Styles.counterTitle}>Выполнено за всё время</h2>\n            <span className={cn(Styles.counter, 'text', 'text_type_digits-default')}>{orderHistory.total}</span>\n          </div>\n          <div>\n            <h2 className={Styles.counterTitle}>Выполнено за сегодня</h2>\n            <span className={cn(Styles.counter, 'text', 'text_type_digits-default')}>{orderHistory.totalToday}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {API} from '../../config/params';\nimport {TConfirmRestorePasswordForm} from '../../types/forms';\nimport {AppDispatch, AppThunk} from '../../types/stores/TRootStore';\nimport {\n  CONFIRM_PASSWORD_RESET_ERROR,\n  CONFIRM_PASSWORD_RESET_REQUEST,\n  CONFIRM_PASSWORD_RESET_SUCCESS,\n  PASSWORD_RESET_ERROR,\n  PASSWORD_RESET_REQUEST,\n  PASSWORD_RESET_SUCCESS,\n} from '../constants';\nimport {setError} from './app';\n\nexport interface IConfirmPasswordResetErrorAction {\n  readonly type: typeof CONFIRM_PASSWORD_RESET_ERROR;\n}\n\nexport interface IConfirmPasswordResetRequestAction {\n  readonly type: typeof CONFIRM_PASSWORD_RESET_REQUEST;\n}\n\nexport interface IConfirmPasswordResetSuccessAction {\n  readonly type: typeof CONFIRM_PASSWORD_RESET_SUCCESS;\n}\n\nexport interface IPasswordResetErrorAction {\n  readonly type: typeof PASSWORD_RESET_ERROR;\n}\n\nexport interface IPasswordResetRequestAction {\n  readonly type: typeof PASSWORD_RESET_REQUEST;\n}\n\nexport interface IPasswordResetSuccessAction {\n  readonly type: typeof PASSWORD_RESET_SUCCESS;\n}\n\nexport type TResetPasswordActions =\n  IConfirmPasswordResetErrorAction\n  | IConfirmPasswordResetRequestAction\n  | IConfirmPasswordResetSuccessAction\n  | IPasswordResetErrorAction\n  | IPasswordResetRequestAction\n  | IPasswordResetSuccessAction;\n\nexport const resetPassword: AppThunk = (email: string) => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      dispatch({type: PASSWORD_RESET_REQUEST});\n      const response = await fetch(`${API}password-reset`, {\n        method: 'POST',\n        body: JSON.stringify({email}),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const {success} = await response.json();\n      if (!success) {\n        throw new Error('Failed parse data');\n      }\n      dispatch({type: PASSWORD_RESET_SUCCESS});\n    } catch (e) {\n      dispatch({type: PASSWORD_RESET_ERROR});\n      if (e instanceof Error) {\n        dispatch(setError(e.message));\n      }\n    }\n  }\n}\n\nexport const confirmResetPassword: AppThunk = (form: TConfirmRestorePasswordForm) => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      dispatch({type: CONFIRM_PASSWORD_RESET_REQUEST});\n      const response = await fetch(`${API}password-reset/reset`, {\n        method: 'POST',\n        body: JSON.stringify(form),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const {success} = await response.json();\n      if (!success) {\n        throw new Error('Failed parse data');\n      }\n\n      dispatch({type: CONFIRM_PASSWORD_RESET_SUCCESS});\n    } catch (e) {\n      dispatch({type: CONFIRM_PASSWORD_RESET_ERROR});\n      if (e instanceof Error) {\n        dispatch(setError(e.message));\n      }\n    }\n  }\n}\n","import {Button, EmailInput} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {SyntheticEvent, useEffect, useState} from 'react';\nimport {Link, useHistory, useLocation} from 'react-router-dom';\nimport {Routes} from '../enums';\nimport {resetPassword} from '../services/actions/resetPassword';\nimport {useDispatch, useSelector} from '../services/hooks';\nimport './common.css';\nimport Styles from './login.module.css';\n\nexport const ForgotPasswordPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {pathname} = useLocation();\n  const {isSendForgotPassword} = useSelector(store => store.resetPassword);\n  const [email, setEmail] = useState<string>('');\n\n  const onChange = (e: any): void => {\n    setEmail(e.target.value)\n  }\n  const onRestore = (e: SyntheticEvent): void => {\n    e.preventDefault();\n    dispatch(resetPassword(email));\n  }\n\n  useEffect(() => {\n    if (isSendForgotPassword) {\n      history.replace({pathname: Routes.RESET_PASSWORD, state: {from: pathname}});\n    }\n  }, [isSendForgotPassword, history, pathname]);\n\n  return (\n    <div className={Styles.container}>\n      <div className={Styles.login}>\n        <div className=\"text_type_main-medium\">Восстановление пароля</div>\n        <form onSubmit={onRestore}>\n          <div className={Styles.input}>\n            <EmailInput value={email} name=\"email\" onChange={onChange}/>\n          </div>\n          <div className={Styles.btnLogin}>\n            <Button type=\"primary\" size=\"large\">\n              Восстановить\n            </Button>\n          </div>\n        </form>\n        <div className={Styles.firstLine}>\n          <span>Вспомнили пароль?</span>\n          <Link to={`${Routes.LOGIN}`}>Войти</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import cn from 'classnames';\nimport {useMemo} from 'react';\nimport {useLocation, useParams} from 'react-router-dom';\nimport {useSelector} from '../../../../services/hooks';\nimport {TComposition} from '../../../../types';\nimport Styles from './ingredient-details.module.css';\n\nfunction IngredientDetails() {\n  const {id} = useParams<{ id?: string }>();\n  const location = useLocation();\n  // @ts-ignore\n  const isModalOpen = location.state && location.state.modal;\n  const {ingredients} = useSelector(store => store.app);\n  const ingredient = useMemo(() => ingredients.find(ingredient => ingredient._id === id), [id, ingredients]);\n\n  if (!ingredient) return (<></>);\n\n  const composition: TComposition[] = [\n    {\n      name: 'Калории, ккал',\n      value: ingredient.calories,\n    },\n    {\n      name: 'Белки, г',\n      value: ingredient.proteins,\n    },\n    {\n      name: 'Жиры, г',\n      value: ingredient.fat,\n    },\n    {\n      name: 'Углеводы, г',\n      value: ingredient.carbohydrates,\n    },\n  ];\n\n  return (\n    <div className={cn(Styles.content, {[Styles.page]: !isModalOpen})}>\n      <h1 className={Styles.header}>Детали ингредиента</h1>\n      <div className={Styles.body}>\n        <img className={Styles.img} src={ingredient.image_large} alt={ingredient.name}/>\n        <h2 className={Styles.name}>{ingredient.name}</h2>\n        <div className={Styles.composition}>\n          {composition.map((item, i) => (\n            <div key={i} className={`${Styles.compositionItem} text_color_inactive`}>\n              <span>{item.name}</span>\n              <span className={`${Styles.compositionValue} text text_type_digits-medium`}>{item.value}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default IngredientDetails;\n","import {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport IngredientDetails from '../components/burger/ingredients/ingredient-details/ingredient-details';\nimport {RESET_ERROR, SET_ERROR} from '../services/constants';\nimport {useDispatch, useSelector} from '../services/hooks';\nimport {Ingredient} from '../types';\n\nexport const IngredientPage = () => {\n  const params = useParams<{ id?: string }>();\n  const dispatch = useDispatch();\n  const {ingredients} = useSelector((store) => store.app);\n  const [ingredient, setIngredient] = useState<Ingredient | undefined>();\n\n  useEffect(() => {\n    setIngredient(ingredients.find(_ => _._id === params.id));\n    if (ingredients.length && !ingredient) {\n      dispatch({type: SET_ERROR, error: 'Ингредиент с таким ID не найден'});\n    }\n\n    return () => {\n      dispatch({type: RESET_ERROR});\n    }\n  }, [ingredients, ingredient, dispatch, params.id]);\n\n  return (\n    <div>\n      {\n        ingredient\n          ? <IngredientDetails />\n          : <></>\n      }\n    </div>\n  );\n}\n","import {API} from '../config/params';\nimport {TTokenResponse} from '../types/responses';\nimport {deleteCookie, setCookie} from './helpers';\n\nconst setAccessToken = (token: string): void => {\n  setCookie('accessToken', token, {'max-age': 1200});\n}\n\nconst setTokens = (access: string, refresh: string): void => {\n  localStorage.setItem('refreshToken', refresh);\n  setCookie('accessToken', access.split(' ')[1], {'max-age': 1200});\n}\n\nconst removeTokens = (): void => {\n  localStorage.removeItem('refreshToken');\n  deleteCookie('accessToken');\n}\n\nconst updateToken = async (token: string): Promise<void> => {\n  const response = await fetch(`${API}auth/token`, {\n    method: 'POST',\n    body: JSON.stringify({token}),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  if (!response.ok) {\n    return;\n  }\n  const {success, refreshToken, accessToken} = await response.json() as TTokenResponse;\n  if (!success) {\n    throw new Error('Failed updating token');\n  }\n\n  setTokens(accessToken, refreshToken);\n}\nexport {\n  removeTokens,\n  setAccessToken,\n  setTokens,\n  updateToken\n};\n","import {API} from '../../config/params';\nimport {TLoginForm, TSignupForm} from '../../types/forms';\nimport {TLoginResponse, TUserResponse} from '../../types/responses';\nimport {TUserStore} from '../../types/stores';\nimport {AppDispatch, AppThunk} from '../../types/stores/TRootStore';\nimport {removeTokens, setTokens, updateToken} from '../../utils/auth';\nimport {getCookie} from '../../utils/helpers';\nimport {\n  FETCH_USER_ERROR,\n  FETCH_USER_REQUEST,\n  FETCH_USER_SUCCESS,\n  LOGIN_ERROR,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGOUT_ERROR,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  SIGNUP_ERROR,\n  SIGNUP_REQUEST,\n  SIGNUP_SUCCESS,\n  UPDATE_USER_ERROR,\n  UPDATE_USER_REQUEST,\n  UPDATE_USER_SUCCESS,\n} from '../constants';\nimport {setError} from './app';\n\nexport interface ILoginErrorAction {\n  readonly type: typeof LOGIN_ERROR;\n}\n\nexport interface ILoginRequestAction {\n  readonly type: typeof LOGIN_REQUEST;\n}\n\nexport interface ILoginSuccessAction {\n  readonly type: typeof LOGIN_SUCCESS;\n  readonly user: TUserStore;\n}\n\nexport interface ILogoutErrorAction {\n  readonly type: typeof LOGOUT_ERROR;\n}\n\nexport interface ILogoutRequestAction {\n  readonly type: typeof LOGOUT_REQUEST;\n}\n\nexport interface ILogoutSuccessAction {\n  readonly type: typeof LOGOUT_SUCCESS;\n}\n\nexport interface ISignupErrorAction {\n  readonly type: typeof SIGNUP_ERROR;\n}\n\nexport interface ISignupRequestAction {\n  readonly type: typeof SIGNUP_REQUEST;\n}\n\nexport interface ISignupSuccessAction {\n  readonly type: typeof SIGNUP_SUCCESS;\n  readonly user: TUserStore;\n}\n\nexport interface IFetchUserRequestAction {\n  readonly type: typeof FETCH_USER_REQUEST;\n}\n\nexport interface IFetchUserSuccessAction {\n  readonly type: typeof FETCH_USER_SUCCESS;\n  readonly user: TUserStore;\n}\n\nexport interface IFetchUserErrorAction {\n  readonly type: typeof FETCH_USER_ERROR;\n}\n\nexport interface IUpdateUserErrorAction {\n  readonly type: typeof UPDATE_USER_ERROR;\n}\n\nexport interface IUpdateUserRequestAction {\n  readonly type: typeof UPDATE_USER_REQUEST;\n}\n\nexport interface IUpdateUserSuccessAction {\n  readonly type: typeof UPDATE_USER_SUCCESS;\n  readonly user: TUserStore;\n}\n\nexport type TUserActions =\n  ILoginErrorAction\n  | ILoginRequestAction\n  | ILoginSuccessAction\n  | ILogoutErrorAction\n  | ILogoutRequestAction\n  | ILogoutSuccessAction\n  | ISignupErrorAction\n  | ISignupRequestAction\n  | ISignupSuccessAction\n  | IFetchUserRequestAction\n  | IFetchUserSuccessAction\n  | IFetchUserErrorAction\n  | IUpdateUserSuccessAction\n  | IUpdateUserErrorAction\n  | IUpdateUserRequestAction;\n\ntype TUser = Omit<TUserStore, 'password'>;\n\nexport const loginSuccess = (user: TUserStore): ILoginSuccessAction => ({\n  type: LOGIN_SUCCESS,\n  user,\n});\n\nexport const signupSuccess = (user: TUserStore): ISignupSuccessAction => ({\n  type: SIGNUP_SUCCESS,\n  user,\n});\n\nexport const fetchUserSuccess = (user: TUser): IFetchUserSuccessAction => ({\n  type: FETCH_USER_SUCCESS,\n  user: {\n    ...user,\n    password: '',\n  },\n});\n\nexport const updateUserSuccess = (user: TUser): IUpdateUserSuccessAction => ({\n  type: UPDATE_USER_SUCCESS,\n  user: {\n    ...user,\n    password: '',\n  },\n});\n\nexport const fetchUser: AppThunk = () => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      dispatch({type: FETCH_USER_REQUEST});\n      let token = getCookie('accessToken');\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!token) {\n        if (refreshToken) {\n          await updateToken(refreshToken);\n          token = getCookie('accessToken');\n        } else {\n          return;\n        }\n      }\n      const response = await fetch(`${API}auth/user`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n      const {success, user} = await response.json() as TUserResponse;\n\n      if (!success) {\n        throw new Error('Failed fetching user data');\n      }\n\n      dispatch(fetchUserSuccess(user));\n    } catch (e) {\n      dispatch({type: FETCH_USER_ERROR});\n      if (e instanceof Error) {\n        dispatch(setError(e.message));\n      }\n    }\n  }\n}\nexport const updateUser: AppThunk = (form: TUserStore) => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      dispatch({type: UPDATE_USER_REQUEST});\n      let token = getCookie('accessToken');\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!token && refreshToken) {\n        await updateToken(refreshToken);\n        token = getCookie('accessToken');\n      }\n      const response = await fetch(`${API}auth/user`, {\n        method: 'PATCH',\n        body: JSON.stringify(form),\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Error: ${errorData.message}`);\n      }\n      const {success, user} = await response.json() as TUserResponse;\n\n      if (!success) {\n        throw new Error('Failed updating user data');\n      }\n\n      dispatch(updateUserSuccess(user));\n    } catch (e) {\n      dispatch({type: UPDATE_USER_ERROR});\n      if (e instanceof Error) {\n        dispatch(setError(e.message));\n      }\n    }\n  }\n}\nexport const login: AppThunk = (form: TLoginForm) => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      dispatch({type: LOGIN_REQUEST});\n      const response = await fetch(`${API}auth/login`, {\n        method: 'POST',\n        body: JSON.stringify(form),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Error: ${errorData.message}`);\n      }\n      const {success, user, accessToken, refreshToken} = await response.json() as TLoginResponse;\n\n      if (!success) {\n        throw new Error('Failed login');\n      }\n\n      setTokens(accessToken, refreshToken);\n      dispatch(loginSuccess(user));\n    } catch (e) {\n      dispatch({type: LOGIN_ERROR});\n      if (e instanceof Error) {\n        dispatch(setError(e.message));\n      }\n    }\n  }\n}\nexport const logout: AppThunk = (token: string) => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      dispatch({type: LOGOUT_REQUEST});\n      const response = await fetch(`${API}auth/logout`, {\n        method: 'POST',\n        body: JSON.stringify({token}),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Error: ${errorData.message}`);\n      }\n      const {success} = await response.json() as TLoginResponse;\n\n      if (!success) {\n        throw new Error('Failed logout');\n      }\n\n      removeTokens();\n      dispatch({type: LOGOUT_SUCCESS});\n    } catch (e) {\n      dispatch({type: LOGOUT_ERROR});\n      if (e instanceof Error) {\n        dispatch(setError(e.message));\n      }\n    }\n  }\n}\nexport const signup: AppThunk = (form: TSignupForm) => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      dispatch({type: SIGNUP_REQUEST});\n      const response = await fetch(`${API}auth/register`, {\n        method: 'POST',\n        body: JSON.stringify(form),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Error: ${errorData.message}`);\n      }\n      const {success, user, refreshToken, accessToken} = await response.json() as TLoginResponse;\n      if (!success) {\n        throw new Error('Failed signup');\n      }\n      setTokens(accessToken, refreshToken);\n      dispatch(signupSuccess(user));\n    } catch (e) {\n      dispatch({type: SIGNUP_ERROR});\n      if (e instanceof Error) {\n        dispatch(setError(e.message));\n      }\n    }\n  }\n}\n","import {Button, EmailInput, PasswordInput} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {ChangeEvent, SyntheticEvent, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Routes} from '../enums';\nimport {login} from '../services/actions/user';\nimport {useDispatch} from '../services/hooks';\nimport {TLoginForm} from '../types/forms';\nimport './common.css';\nimport Styles from './login.module.css';\n\nexport const LoginPage = () => {\n  const dispatch = useDispatch();\n  const [form, setForm] = useState<TLoginForm>({\n    email: '',\n    password: '',\n  });\n  const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {name, value} = e.target;\n    setForm({\n      ...form,\n      [name]: value,\n    })\n  }\n  const onLogin = (e: SyntheticEvent): void => {\n    e.preventDefault();\n    dispatch(login(form));\n  };\n\n  return (\n    <div className={Styles.container}>\n      <div className={Styles.login}>\n        <div className=\"text_type_main-medium\">Вход</div>\n        <form onSubmit={onLogin}>\n          <div className={Styles.input}>\n            <EmailInput onChange={onChange} value={form.email} name=\"email\"/>\n          </div>\n          <div className={Styles.input}>\n            <PasswordInput onChange={onChange} value={form.password} name=\"password\"/>\n          </div>\n          <div className={Styles.btnLogin}>\n            <Button type=\"primary\" size=\"large\">\n              Войти\n            </Button>\n          </div>\n        </form>\n        <div className={Styles.firstLine}>\n          <span>Вы – новый пользователь?</span>\n          <Link to={Routes.SIGNUP}>Зарегистрироваться</Link>\n        </div>\n        <div className={Styles.secondLine}>\n          <span>Забыли пароль?</span>\n          <Link to={Routes.FORGOT_PASSWORD}>Восстановить пароль</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import {ConstructorItem, Ingredient} from '../../types';\nimport {getIngredient} from '../../utils/helpers';\nimport {\n  ADD_INGREDIENT_TO_ORDER,\n  MOVE_INGREDIENTS,\n  REMOVE_INGREDIENT_FROM_ORDER,\n  RESET_CURRENT_ORDER,\n  SET_NUMBER,\n} from '../constants';\n\nexport interface IAddIngredientToOrderAction {\n  readonly type: typeof ADD_INGREDIENT_TO_ORDER;\n  readonly value: ConstructorItem;\n}\n\nexport interface IMoveIngredientsAction {\n  readonly type: typeof MOVE_INGREDIENTS;\n  readonly dragIndex: number;\n  readonly hoverIndex: number;\n}\n\nexport interface IRemoveIngredientFromOrderAction {\n  readonly type: typeof REMOVE_INGREDIENT_FROM_ORDER;\n  readonly value: string;\n}\n\nexport interface IResetCurrentOrderAction {\n  readonly type: typeof RESET_CURRENT_ORDER;\n}\n\nexport interface ISetNumberAction {\n  readonly type: typeof SET_NUMBER;\n  readonly number: number;\n}\n\nexport type TBurgerConstructorActions =\n  IAddIngredientToOrderAction\n  | IMoveIngredientsAction\n  | IRemoveIngredientFromOrderAction\n  | IResetCurrentOrderAction\n  | ISetNumberAction;\n\nexport const addIngredientToOrder = (item: Ingredient, position?: 'top' | 'bottom' | undefined): IAddIngredientToOrderAction => ({\n  type: ADD_INGREDIENT_TO_ORDER,\n  value: getIngredient(item, position),\n})\n\nexport const moveIngredients = (dragIndex: number, hoverIndex: number): IMoveIngredientsAction => ({\n  type: MOVE_INGREDIENTS,\n  dragIndex,\n  hoverIndex,\n});\n\nexport const removeIngredientFromOrder = (value: string): IRemoveIngredientFromOrderAction => ({\n  type: REMOVE_INGREDIENT_FROM_ORDER,\n  value,\n});\n\nexport const setNumber = (number: number): ISetNumberAction => ({\n  type: SET_NUMBER,\n  number,\n});\n","import {API} from '../../config/params';\nimport {ConstructorItem, Order} from '../../types';\nimport {AppDispatch, AppThunk} from '../../types/stores/TRootStore';\nimport {updateToken} from '../../utils/auth';\nimport {getCookie} from '../../utils/helpers';\nimport {CREATE_ORDER_ERROR, CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS} from '../constants';\nimport {setError} from './app';\nimport {setNumber} from './burgerConstructor';\n\nexport interface ICreateOrderError {\n  readonly type: typeof CREATE_ORDER_ERROR;\n}\n\nexport interface ICreateOrderRequestAction {\n  readonly type: typeof CREATE_ORDER_REQUEST;\n}\n\nexport interface ICreateOrderSuccessAction {\n  readonly type: typeof CREATE_ORDER_SUCCESS;\n  readonly order: Order;\n}\n\nexport type TOrderActions =\n  ICreateOrderError\n  | ICreateOrderRequestAction\n  | ICreateOrderSuccessAction;\n\nexport const createOrderSuccess = (order: Order): ICreateOrderSuccessAction => ({\n  type: CREATE_ORDER_SUCCESS,\n  order,\n});\n\nexport const createOrder: AppThunk = (ingredients: ConstructorItem[]) => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      dispatch({type: CREATE_ORDER_REQUEST});\n      let token = getCookie('accessToken');\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!token) {\n        if (refreshToken) {\n          await updateToken(refreshToken);\n          token = getCookie('accessToken');\n        } else {\n          return;\n        }\n      }\n      const ids = ingredients.map(ingredient => ingredient.id);\n      const body = {ingredients: ids};\n      const response = await fetch(`${API}orders`, {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        const data = JSON.parse(await response.text());\n        throw new Error(`Error: ${response.status}, ${data.message}`);\n      }\n      const {success, order: data} = await response.json();\n\n      if (!success) {\n        throw new Error('Failed parse data');\n      }\n      const order: Order = {number: data.number, ingredients};\n\n      dispatch(setNumber(order.number));\n      dispatch(createOrderSuccess(order));\n    } catch (e) {\n      dispatch({type: CREATE_ORDER_ERROR});\n      if (e instanceof Error) {\n        dispatch(setError(e.message));\n      }\n    }\n  }\n}\n","import Styles from './modal-overlay.module.css';\n\nfunction ModalOverlay() {\n  return (\n    <div className={Styles.modalOverlay}/>\n  );\n}\n\nexport default ModalOverlay;\n","import Styles from './modal.module.css';\nimport {createPortal} from \"react-dom\";\nimport {FC, useEffect, useRef} from 'react';\nimport ModalOverlay from \"./overlay/modal-overlay\";\nimport {BaseModalProps} from \"../../../types\";\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nconst modalRoot = document.getElementById('modals')!;\n\nconst Modal: FC<BaseModalProps> = ({ onClose, children }) =>  {\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const onKeyPress = (e: KeyboardEvent) => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    }\n    const onClick = (e: MouseEvent) => {\n      if (dialogRef.current && !dialogRef.current.contains(e.target as Node)) {\n        onClose();\n      }\n    }\n\n    document.addEventListener('keyup', onKeyPress);\n    document.addEventListener('click', onClick);\n\n    return () => {\n      document.removeEventListener('keyup', onKeyPress);\n      document.removeEventListener('click', onClick);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <>\n      <div className={`${Styles.modal} text_type_main-default`}>\n        <div ref={dialogRef} className={Styles.modalDialog}>\n          <div className={Styles.modalContent}>\n            <span className={Styles.closeButton}>\n              <CloseIcon type=\"primary\" onClick={onClose}/>\n            </span>\n            {children}\n          </div>\n        </div>\n      </div>\n      <ModalOverlay/>\n    </>,\n    modalRoot\n  );\n}\n\nexport default Modal;\n","import {ConstructorElement, DragIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport cn from 'classnames';\nimport React, {FC, useRef} from 'react';\nimport {useDrag, useDrop} from 'react-dnd';\nimport {Types} from '../../../../enums';\nimport {moveIngredients, removeIngredientFromOrder} from '../../../../services/actions/burgerConstructor';\nimport {useDispatch} from '../../../../services/hooks';\nimport {ConstructorItem as ConstructorItemType} from '../../../../types';\nimport Styles from './item.module.css';\n\ntype TConstructorItemProps = ConstructorItemType & {\n  index: number;\n}\n\nconst ConstructorItem: FC<TConstructorItemProps> = (props) => {\n  const dispatch = useDispatch();\n  const ref = useRef<HTMLDivElement>(null);\n  const [{isDragging}, drag] = useDrag(() => ({\n    type: 'moveIngredient',\n    item: {index: props.index},\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  }), [props.index]);\n  const [, drop] = useDrop({\n    accept: 'moveIngredient',\n    hover: (item: { index: number }) => onHover(item),\n  })\n\n  const isBun = props.type === Types.BUN;\n  const opacity = isDragging ? 0 : 1;\n\n  const onDeleteItem = (): void => {\n    if (isBun) {\n      return;\n    }\n    dispatch(removeIngredientFromOrder(props.uniqueId));\n  }\n  const onHover = (item: { index: number }): void => {\n    if (!ref.current) {\n      return;\n    }\n    const dragIndex = item.index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    dispatch(moveIngredients(dragIndex, hoverIndex));\n\n    item.index = hoverIndex;\n  }\n\n  drag(drop(ref));\n\n  return (\n    <div {...(isBun ? {} : {ref})}\n         style={{opacity}}\n         className={cn([Styles.item, {[Styles.bun]: isBun}])}>\n      <div className={Styles.icon}>\n        {!isBun && <DragIcon type=\"primary\"/>}\n      </div>\n      <ConstructorElement {...props} type={props.position} handleClose={onDeleteItem}/>\n    </div>\n  );\n}\n\nexport default ConstructorItem;\n","export default __webpack_public_path__ + \"static/media/icon-done.6d4020a5.svg\";","import {FC} from 'react';\nimport Styles from './order-details.module.css';\nimport Icon from '../../../../images/icon-done.svg';\nimport {OrderDetailProps} from \"../../../../types\";\n\nconst OrderDetails: FC<OrderDetailProps> = (props) => {\n  return (\n    <div className={Styles.content}>\n      <div className={Styles.body}>\n        <span className={`${Styles.orderNumber} text text_type_digits-large`}>{props.id}</span>\n        <h2 className={Styles.orderTitle}>идентификатор заказа</h2>\n        <img className={Styles.icon} src={Icon} alt=\"Done\"/>\n        <div className={Styles.description}>\n          <span>Ваш заказ начали готовить</span>\n          <span className=\"text_color_inactive\">Дождитесь готовности на орбитальной станции</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OrderDetails;\n","import {Button, CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport cn from 'classnames';\nimport React, {useEffect, useMemo, useState} from 'react';\nimport {useDrop} from 'react-dnd';\nimport {useHistory} from 'react-router-dom';\nimport {Routes, Types} from '../../../enums';\nimport {addIngredientToOrder} from '../../../services/actions/burgerConstructor';\nimport {createOrder} from '../../../services/actions/order';\nimport {RESET_CURRENT_ORDER} from '../../../services/constants';\nimport {useDispatch, useSelector} from '../../../services/hooks';\nimport Modal from '../../elements/modal/modal';\nimport Styles from './burger-constructor.module.css';\nimport ConstructorItem from './item/item';\nimport OrderDetails from './order-details/order-details';\n\nfunction BurgerConstructor() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {name} = useSelector(store => store.user);\n  const [{isHover}, drop] = useDrop(() => ({\n    accept: 'newIngredient',\n    drop: ({id}: { id: string }) => onDrop(id),\n    collect: monitor => ({\n      isHover: monitor.isOver(),\n    }),\n  }));\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const {orderNumber, mainIngredients, ingredients} = useSelector((store) => ({\n    ingredients: store.app.ingredients,\n    mainIngredients: store.burgerConstructor.currentOrder?.ingredients || [],\n    orderNumber: store.burgerConstructor.number,\n  }));\n\n  const totalCost = mainIngredients.reduce((result, current) => result + current.price, 0);\n  const isOrderEmpty = useMemo(() => totalCost === 0, [totalCost]);\n\n  useEffect(() => {\n    if (orderNumber) {\n      setShowModal(true);\n    }\n  }, [orderNumber]);\n\n  const onCreateOrder = (): void => {\n    if (!mainIngredients.length) {\n      return;\n    }\n\n    if (!name) {\n      history.replace({pathname: Routes.LOGIN});\n    } else {\n      dispatch(createOrder(mainIngredients));\n    }\n  };\n  const onCloseModal = (): void => {\n    setShowModal(false);\n    dispatch({type: RESET_CURRENT_ORDER});\n  };\n  const onDrop = (id: string): void => {\n    const item = ingredients.find(item => item._id === id);\n    if (!item) {\n      return;\n    }\n\n    if (item.type === Types.BUN) {\n      dispatch(addIngredientToOrder(item, 'top'));\n      dispatch(addIngredientToOrder(item, 'bottom'));\n      return;\n    }\n\n    dispatch(addIngredientToOrder(item));\n  }\n  return (\n    <section ref={drop} className={Styles.constructorSection} data-test-id=\"constructor\">\n      {\n        isOrderEmpty\n          ?\n          <div className={cn(Styles.listEmpty, {[Styles.listEmptyHover]: isHover})}>\n            <span>Перетащите сюда ингредиенты</span>\n          </div>\n          :\n          <>\n            <div className={Styles.list}>\n              {mainIngredients.map((item, i) => (<ConstructorItem index={i} key={item.uniqueId} {...item}/>))}\n            </div>\n            <div className={Styles.constructorFooter}>\n            <span className={`${Styles.cost} text text_type_digits-medium`}>\n              <span className=\"mr-2\">{totalCost}</span>\n              <CurrencyIcon type=\"primary\"/>\n            </span>\n              <Button onClick={onCreateOrder}>Оформить заказ</Button>\n            </div>\n          </>\n      }\n      {\n        showModal &&\n        <Modal onClose={onCloseModal}>\n          <OrderDetails id={orderNumber!}/>\n        </Modal>\n      }\n    </section>\n  );\n}\n\nexport default BurgerConstructor;\n","import {Counter, CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport cn from 'classnames';\nimport React, {FC, memo, useCallback} from 'react';\nimport {useDrag} from 'react-dnd';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {Routes} from '../../../enums';\nimport {setIngredient, toggleModal} from '../../../services/actions/detailModal';\nimport {useDispatch, useSelector} from '../../../services/hooks';\nimport {Ingredient as IngredientType} from '../../../types';\nimport Styles from './ingredient.module.css';\n\nconst Ingredient: FC<IngredientType> = memo((props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  const counter = useSelector((store) => {\n    return store.burgerConstructor.currentOrder?.ingredients.filter(_ => _.id === props._id)?.length || 0;\n  });\n  const [, drag] = useDrag(() => ({\n    type: 'newIngredient',\n    item: {id: props._id},\n  }));\n  const onShowDetails = useCallback(() => {\n    dispatch(setIngredient(props));\n    dispatch(toggleModal(true));\n\n    history.replace({\n      pathname: Routes.INGREDIENT_VIEW.replace(/:id/, props._id),\n      state: {modal: location},\n    })\n  }, [dispatch, props, history, location]);\n\n  return (\n    <div className={cn('text text_type_main-default p-4', Styles.ingredient)} onClick={onShowDetails} data-test-id=\"ingredient\">\n      {counter > 0 && <Counter count={counter}/>}\n      <div ref={drag} className={Styles.content}>\n        <img src={props.image} alt={props.name}/>\n        <div>\n          <span className={`${Styles.price} mr-3`} data-test-id=\"price\">{props.price}</span>\n          <CurrencyIcon type=\"primary\"/>\n        </div>\n        <div>{props.name}</div>\n      </div>\n    </div>\n  )\n})\n\nexport default Ingredient;\n","import Styles from \"./ingredient-group.module.css\";\nimport {Ingredient as IngredientType} from \"../../../../types\";\nimport Ingredient from \"../ingredient\";\nimport React, {FC} from 'react';\nimport {GroupIngredient} from \"../../../../types\";\n\ninterface IProps {\n  group: GroupIngredient;\n}\n\nconst IngredientGroup: FC<IProps> = ({ group }) => {\n  return (\n    <>\n      <h2 id={group.type}>{group.name}</h2>\n      <div className={Styles.ingredients} data-test-id=\"ingredientGroup\">\n        {group.items.map((ingredient: IngredientType) => (\n          <Ingredient key={ingredient._id} {...ingredient}/>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default IngredientGroup;\n","import {Tab} from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, {RefObject, SyntheticEvent, useEffect, useRef, useState} from 'react';\nimport {Types} from '../../../../enums';\nimport {useSelector} from '../../../../services/hooks';\nimport {Coords, GroupIngredient, Tab as TabType} from '../../../../types';\nimport IngredientGroup from '../group/ingredient-group';\nimport Styles from './burger-ingredients.module.css';\n\nconst OFFSET = 88 + 80 + 76 + 15;\n\nfunction BurgerIngredients() {\n  const [tabs, setTabs] = useState<TabType[]>([]);\n  const [currentTab, setCurrentTab] = useState<TabType>();\n  const [groups, setGroups] = useState<GroupIngredient[]>([\n    {\n      name: 'Булки',\n      type: Types.BUN,\n      items: [],\n    },\n    {\n      name: 'Соусы',\n      type: Types.SAUCE,\n      items: [],\n    },\n    {\n      name: 'Начинки',\n      type: Types.MAIN,\n      items: [],\n    },\n  ]);\n\n  const {ingredients} = useSelector((store) => ({\n    ingredients: store.app.ingredients,\n    showModal: store.detailModal.showModal,\n  }));\n\n  const groupRefs: Record<Types, RefObject<HTMLDivElement>> = {\n    [Types.BUN]: useRef<HTMLDivElement>(null),\n    [Types.SAUCE]: useRef<HTMLDivElement>(null),\n    [Types.MAIN]: useRef<HTMLDivElement>(null),\n  };\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  const onChangeTab = (tab: TabType): void => {\n    setCurrentTab(tab);\n    if (contentRef.current) {\n      contentRef.current.scrollTop = (groupRefs[tab.type].current?.offsetTop || 0) - OFFSET;\n    }\n  }\n  const onScroll = (e: SyntheticEvent): void => {\n    let {scrollTop} = e.currentTarget;\n    scrollTop += OFFSET;\n\n    const types: Types[] = Object.keys(groupRefs).map(type => type as Types);\n    const coords: Coords[] = types.map((type) => ({\n      type,\n      top: groupRefs[type].current?.offsetTop || 0,\n    }));\n    let result: Coords | null = null;\n\n    coords.forEach((coord) => {\n      if ((!result && scrollTop >= coord.top) || (result && scrollTop >= coord.top && scrollTop >= result.top)) {\n        result = coord;\n      }\n    })\n\n    const tab = tabs.find(tab => tab.type === result?.type);\n    if (tab) {\n      setCurrentTab(tab);\n    }\n  }\n  const isActiveTab = (type: Types): boolean => currentTab?.type === type;\n\n  useEffect(() => {\n    const result: GroupIngredient[] = groups;\n\n    ingredients.forEach((ingredient) => {\n      const index = result.findIndex(group => group.type === ingredient.type);\n\n      if (index >= 0) {\n        result[index].items.push(ingredient);\n      }\n    })\n    setGroups(result);\n  }, []);\n  useEffect(() => {\n    setTabs(groups.map((group) => ({\n      name: group.name,\n      type: group.type,\n    })));\n  }, [groups]);\n  useEffect(() => {\n    setCurrentTab(tabs[0]);\n  }, [tabs]);\n\n  return (\n    <section className={Styles.list}>\n      <h1 className={Styles.title}>Соберите бургер</h1>\n      <div className={Styles.tabBlock} data-test-id=\"ingredientTabs\">\n        {tabs.map((tab) => (\n          <Tab key={tab.type} value={tab.name} active={isActiveTab(tab.type)}\n               onClick={() => onChangeTab(tab)}>\n            {tab.name}\n          </Tab>\n        ))}\n      </div>\n      <div className={Styles.tabContent} ref={contentRef} onScroll={onScroll}>\n        {groups.map((group: GroupIngredient) => (\n          <div ref={groupRefs[group.type]} key={group.type} className={Styles.ingredientGroup}>\n            <IngredientGroup group={group}/>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n}\n\nexport default BurgerIngredients;\n","import React, {useMemo} from 'react';\nimport {DndProvider} from 'react-dnd';\nimport {HTML5Backend} from 'react-dnd-html5-backend';\nimport BurgerConstructor from '../components/burger/constructor/burger-constructor';\nimport BurgerIngredients from '../components/burger/ingredients/list/burger-ingredients';\nimport {useSelector} from '../services/hooks';\nimport Styles from './main.module.css';\n\nexport const MainPage = () => {\n  const {ingredients} = useSelector(store => store.app);\n  const hasIngredients = useMemo(() => (ingredients || []).length > 0, [ingredients]);\n\n  return (\n    <div className={Styles.container}>\n      <div className={Styles.body}>\n        {\n          hasIngredients &&\n          <DndProvider backend={HTML5Backend}>\n            <BurgerIngredients/>\n            <BurgerConstructor/>\n          </DndProvider>\n        }\n      </div>\n    </div>\n  );\n}\n","import Styles from './not-found.module.css';\n\nexport const NotFoundPage = () => {\n  return (\n    <div className={Styles.container}>\n      <h2>Страница не найдена</h2>\n    </div>\n  )\n}\n","import {OrderList} from '../components/order-list/order-list';\nimport {Routes} from '../enums';\nimport {setOrderHistory} from '../services/actions/orderHistory';\nimport {useSelector} from '../services/hooks';\nimport {useSocket} from '../services/hooks/useSocket';\nimport {TOrder} from '../types/responses/TOrderListResponse';\nimport {getCookie} from '../utils/helpers';\nimport Styles from './order-list.module.css';\n\nfunction compare(a: TOrder, b: TOrder) {\n  if (a.number > b.number) {\n    return -1;\n  }\n  if (a.number < b.number) {\n    return 1;\n  }\n  return 0;\n}\n\nexport const OrderListPage = () => {\n  const token = getCookie('accessToken');\n  useSocket(`orders?token=${token}`, setOrderHistory);\n\n  const list = useSelector(store => store.orderHistory.orders.sort(compare));\n\n  return (\n    <>\n      <OrderList orders={list} className={Styles.orderContainer} route={Routes.PROFILE_ORDER_VIEW}/>\n    </>\n  );\n}\n","import {Button, EmailInput, Input, PasswordInput} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {ChangeEvent, SyntheticEvent, useCallback, useEffect, useState} from 'react';\nimport Styles from './edit-profile.module.css';\nimport {updateUser} from '../../services/actions/user';\nimport {useDispatch, useSelector} from '../../services/hooks';\nimport {TUserStore} from '../../types/stores';\n\nexport const EditProfile = () => {\n  const dispatch = useDispatch();\n  const {email, name, password} = useSelector(store => store.user);\n  const [form, setForm] = useState<TUserStore>({\n    email: '',\n    name: '',\n    password: '',\n  });\n\n  const resetForm = useCallback(() => {\n    setForm({email, name, password});\n  }, [email, name, password]);\n\n  useEffect(() => {\n    resetForm();\n  }, [email, name, password, resetForm]);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {name, value} = e.target;\n    setForm({\n      ...form,\n      [name]: value,\n    })\n  }\n\n  const onSave = (e: SyntheticEvent): void => {\n    e.preventDefault();\n    dispatch(updateUser(form));\n  }\n\n  const onReset = (e: SyntheticEvent): void => {\n    e.preventDefault();\n    resetForm();\n  }\n\n  return (\n    <div className={Styles.profile}>\n      <form onSubmit={onSave}>\n        <div className={Styles.input}>\n          <Input onChange={onChange} value={form.name} name=\"name\" placeholder=\"Имя\"/>\n        </div>\n        <div className={Styles.input}>\n          <EmailInput onChange={onChange} value={form.email} name=\"email\"/>\n        </div>\n        <div className={Styles.input}>\n          <PasswordInput onChange={onChange} value={form.password} name=\"password\"/>\n        </div>\n        <div className={Styles.actions}>\n          <Button type=\"primary\">Сохранить</Button>\n          <Button type=\"secondary\" onClick={onReset}>Отменить</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import cn from 'classnames';\nimport {NavLink, useHistory} from 'react-router-dom';\nimport {Routes} from '../../enums';\nimport {logout} from '../../services/actions/user';\nimport {useDispatch} from '../../services/hooks';\nimport Styles from './sidebar.module.css';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onLogout = () => {\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (refreshToken) {\n      dispatch(logout(refreshToken));\n      history.replace({pathname: Routes.LOGIN});\n    }\n  }\n\n  return (\n    <aside>\n      <ul>\n        <li>\n          <NavLink to={Routes.PROFILE} activeClassName={Styles.activeLink} exact>\n            <h2>Профиль</h2>\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to={Routes.PROFILE_ORDER_LIST} activeClassName={Styles.activeLink} exact>\n            <h2>История заказов</h2>\n          </NavLink>\n        </li>\n        <li onClick={onLogout}>\n          <h2>Выход</h2>\n        </li>\n      </ul>\n      <span className={cn('text_color_inactive')}>В этом разделе вы можете изменить свои персональные данные</span>\n    </aside>\n  );\n}\n","import {Route, Switch, useLocation} from 'react-router-dom';\nimport {EditProfile} from '../components/edit-profile/edit-profile';\nimport {Sidebar} from '../components/sidebar/sidebar';\nimport {Routes} from '../enums';\nimport './common.css';\nimport {OrderListPage} from './OrderList';\nimport Styles from './profile.module.css';\n\nexport const ProfilePage = () => {\n  const location = useLocation();\n\n  return (\n    <div className={Styles.container}>\n      <Sidebar/>\n      <Switch location={location}>\n        <Route path={Routes.PROFILE} component={EditProfile} exact/>\n        <Route path={Routes.PROFILE_ORDER_LIST} component={OrderListPage} exact/>\n      </Switch>\n    </div>\n  );\n}\n","import {Button, EmailInput, Input, PasswordInput} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {ChangeEvent, SyntheticEvent, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Routes} from '../enums';\nimport {signup} from '../services/actions/user';\nimport {useDispatch} from '../services/hooks';\nimport {TUserStore} from '../types/stores';\nimport './common.css';\nimport Styles from './login.module.css';\n\nexport const RegisterPage = () => {\n  const dispatch = useDispatch();\n  const [form, setForm] = useState<TUserStore>({\n    email: '',\n    password: '',\n    name: '',\n  })\n  const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const {name, value} = e.target;\n    setForm({\n      ...form,\n      [name]: value,\n    })\n  }\n  const onSignup = (e: SyntheticEvent): void => {\n    e.preventDefault();\n    dispatch(signup(form))\n  }\n\n  return (\n    <div className={Styles.container}>\n      <div className={Styles.login}>\n        <div className=\"text_type_main-medium\">Регистрация</div>\n        <form onSubmit={onSignup}>\n          <div className={Styles.input}>\n            <Input placeholder=\"Имя\" onChange={onChange} value={form.name} name=\"name\"/>\n          </div>\n          <div className={Styles.input}>\n            <EmailInput onChange={onChange} value={form.email} name=\"email\"/>\n          </div>\n          <div className={Styles.input}>\n            <PasswordInput onChange={onChange} value={form.password} name=\"password\"/>\n          </div>\n          <div className={Styles.btnLogin}>\n            <Button type=\"primary\" size=\"large\">\n              Зарегистрироваться\n            </Button>\n          </div>\n        </form>\n        <div className={Styles.firstLine}>\n          <span>Уже зарегистрированы?</span>\n          <Link to={Routes.LOGIN}>Войти</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import {Button, Input, PasswordInput} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {ChangeEvent, SyntheticEvent, useEffect, useState} from 'react';\nimport {Link, useHistory, useLocation} from 'react-router-dom';\nimport {Routes} from '../enums';\nimport {confirmResetPassword} from '../services/actions/resetPassword';\nimport {useDispatch, useSelector} from '../services/hooks';\nimport {TConfirmRestorePasswordForm} from '../types/forms';\nimport './common.css';\nimport Styles from './login.module.css';\n\nexport const ResetPasswordPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {state} = useLocation();\n  const {isSendForgotPassword} = useSelector(store => store.resetPassword);\n  const [form, setForm] = useState<TConfirmRestorePasswordForm>({\n    password: '',\n    token: '',\n  });\n  const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  }\n  const onReset = async (e: SyntheticEvent): Promise<void> => {\n    e.preventDefault();\n    await dispatch(confirmResetPassword(form));\n    history.replace({pathname: Routes.LOGIN});\n  }\n\n  useEffect(() => {\n    if (!isSendForgotPassword && !state) {\n      history.replace({pathname: Routes.FORGOT_PASSWORD});\n    }\n  }, [isSendForgotPassword, history, state]);\n\n  return (\n    <div className={Styles.container}>\n      <div className={Styles.login}>\n        <div className=\"text_type_main-medium\">Восстановление пароля</div>\n        <form onSubmit={onReset}>\n          <div className={Styles.input}>\n            <PasswordInput onChange={onChange} value={form.password} name=\"password\"/>\n          </div>\n          <div className={Styles.input}>\n            <Input onChange={onChange} value={form.token} name=\"token\" placeholder=\"Введите код из письма\"/>\n          </div>\n          <div className={Styles.btnLogin}>\n            <Button type=\"primary\" size=\"large\">\n              Восстановить\n            </Button>\n          </div>\n        </form>\n        <div className={Styles.firstLine}>\n          <span>Вспомнили пароль?</span>\n          <Link to={Routes.LOGIN}>Войти</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import {CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport cn from 'classnames';\nimport React, {useEffect, useMemo} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {OrderStatuses} from '../../enums';\nimport {fetchOrder} from '../../services/actions/orderHistory';\nimport {useDispatch, useSelector} from '../../services/hooks';\nimport {Ingredient} from '../../types';\nimport {formatDate} from '../../utils/helpers';\nimport Styles from './order-detail.module.css';\n\ntype TOrderIngredient = Ingredient & {\n  qty: number;\n}\n\nexport const OrderDetail = () => {\n  const dispatch = useDispatch();\n  const params = useParams<{ id: string }>();\n  const order = useSelector(store => store.orderHistory.current);\n  const ingredients = useSelector((store) => {\n    const ingredients = store.orderHistory.current?.ingredients.map((id) => store.app.ingredients.find(_ => _._id === id)!) || []\n    const result: TOrderIngredient[] = [];\n    ingredients.forEach((ingredient) => {\n      const index = result.findIndex(item => item._id === ingredient._id);\n      if (index === -1) {\n        result.push({\n          ...ingredient,\n          qty: 1,\n        });\n      } else {\n        result[index].qty += 1;\n      }\n    })\n    return result;\n  });\n  const isDone = useMemo(() => order ? OrderStatuses[order.status] === OrderStatuses.done : false, [order]);\n  const createdAt = useMemo(() => order ? formatDate(order.createdAt) : '', [order])\n  const totalSum = useMemo(() => ingredients.reduce((res, item) => res + item.qty * item.price, 0), [ingredients]);\n\n  useEffect(() => {\n    dispatch(fetchOrder(params.id));\n  }, [dispatch, params.id]);\n\n  if (!order) {\n    return (<></>);\n  }\n\n  return (\n    <div className={Styles.orderDetail}>\n      <div className={cn(Styles.orderNumber, 'text', 'text_type_digits-default')}>#{order.number}</div>\n      <div className={Styles.orderName}>\n        <h2>{order.name}</h2>\n        <span className={cn({[Styles.done]: isDone})}>{OrderStatuses[order.status]}</span>\n      </div>\n      <div className={Styles.receipt}>\n        <h2>Состав:</h2>\n        <div className={Styles.container}>\n          {ingredients.map((ingredient, i) => (\n            <div className={Styles.ingredient} key={`${ingredient._id}-${i}`}>\n              <div className={Styles.imgBlock}>\n                <img src={ingredient.image_mobile} alt={ingredient.name}/>\n              </div>\n              <span className={Styles.ingredientName}>{ingredient.name}</span>\n              <span className={cn(Styles.price, 'text', 'text_type_digits-default')}>\n              <span>{ingredient.qty} x {ingredient.price}</span>\n              <CurrencyIcon type=\"primary\"/>\n            </span>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className={Styles.footer}>\n        <span className={cn('text', 'text_type_main-default', 'text_color_inactive')}>\n          {createdAt}\n        </span>\n        <span className={cn(Styles.price, 'text', 'text_type_digits-default')}>\n          <span>{totalSum}</span>\n          <CurrencyIcon type=\"primary\"/>\n        </span>\n      </div>\n    </div>\n  );\n}\n","import {OrderDetail} from '../components/order-detail/order-detail';\n\nexport const OrderViewPage = () => {\n  return (\n    <>\n      <OrderDetail/>\n    </>\n  )\n}\n","import React from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {Routes} from '../../../../enums';\nimport Modal from '../../../elements/modal/modal';\nimport IngredientDetails from '../ingredient-details/ingredient-details';\n\nfunction ModalIngredientDetails() {\n  const history = useHistory();\n  const location = useLocation();\n  // @ts-ignore\n  const isModalOpen = location.state && location.state.modal;\n\n  const onCloseModal = () => {\n    history.replace({pathname: Routes.MAIN});\n  };\n\n  return (\n    isModalOpen\n      ? <Modal onClose={onCloseModal}>\n        <IngredientDetails/>\n      </Modal>\n      : <></>\n  );\n}\n\nexport default ModalIngredientDetails;\n","import {Redirect, Route} from 'react-router-dom';\nimport {Routes} from '../../../enums';\nimport {useSelector} from '../../../services/hooks';\n\nexport const ProtectedRoute = ({children, ...rest}: any) => {\n  const user = useSelector(store => store.user);\n\n  return (\n    <Route\n      {...rest}\n      render={({location}) =>\n        user.name\n          ? children\n          : <Redirect\n            to={{\n              pathname: Routes.LOGIN,\n              state: {from: location},\n            }}\n          />\n      }\n    />\n  );\n}\n","import {BurgerIcon, ListIcon, Logo, ProfileIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {Routes} from '../../enums';\nimport Styles from './header.module.css';\nimport cn from 'classnames';\n\nfunction AppHeader() {\n  return (\n    <header className={Styles.header}>\n      <nav className={Styles.nav}>\n        <div className={Styles.item}>\n          <NavLink to={Routes.MAIN} activeClassName={Styles.activeLink} className={cn(Styles.link, 'text_color_inactive')} exact>\n            <BurgerIcon type=\"secondary\"/>\n            <span>Конструктор</span>\n          </NavLink>\n        </div>\n        <div className={Styles.item}>\n          <NavLink to={Routes.FEED} activeClassName={Styles.activeLink} className={cn(Styles.link, 'text_color_inactive')} exact>\n            <ListIcon type=\"secondary\"/>\n            <span>Лента заказов</span>\n          </NavLink>\n        </div>\n        <div className={`${Styles.logo} ${Styles.item}`}>\n          <NavLink to={Routes.MAIN}>\n            <Logo/>\n          </NavLink>\n        </div>\n        <div className={Styles.item}>\n          <NavLink to={Routes.PROFILE} activeClassName={Styles.activeLink} className={cn(Styles.link, 'text_color_inactive')} exact>\n            <ProfileIcon type=\"secondary\"/>\n            <span>Личный кабинет</span>\n          </NavLink>\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default AppHeader;\n","import React from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport Modal from '../elements/modal/modal';\nimport {OrderDetail} from '../order-detail/order-detail';\n\nexport const ModalOrderDetails = () => {\n  const history = useHistory();\n  const location = useLocation();\n  // @ts-ignore\n  const isModalOpen = location.state && location.state.modal;\n\n  const onCloseModal = () => {\n    const splittedRoute = location.pathname.split('/');\n    const pathname = splittedRoute.slice(0, splittedRoute.length - 1).join('/');\n    history.replace({pathname});\n  };\n\n  return (\n    isModalOpen\n      ? <Modal onClose={onCloseModal}>\n        <OrderDetail/>\n      </Modal>\n      : <></>\n  );\n}\n","import {CloseIcon} from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, {FC, useEffect, useMemo, useState} from 'react';\nimport {Route, Switch, useHistory, useLocation} from 'react-router-dom';\nimport {Routes} from '../../enums';\nimport {\n  ForgotPasswordPage,\n  IngredientPage,\n  LoginPage,\n  MainPage, NotFoundPage,\n  ProfilePage,\n  RegisterPage,\n  ResetPasswordPage,\n  OrderListPage, FeedPage,\n} from '../../pages';\nimport {OrderViewPage} from '../../pages/OrderView';\nimport {getIngredients} from '../../services/actions/app';\nimport {fetchUser} from '../../services/actions/user';\nimport {RESET_ERROR} from '../../services/constants';\nimport {useDispatch, useSelector} from '../../services/hooks';\nimport ModalIngredientDetails from '../burger/ingredients/modal-ingredient-details/model-ingredient-details';\nimport {ProtectedRoute} from '../elements/protected-route/protected-route';\nimport AppHeader from '../header/app-header';\nimport {ModalOrderDetails} from '../modal-order-detail/modal-order-detail';\nimport Styles from './app.module.css';\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  const [isUserLoaded, setUserLoaded] = useState<boolean>(false);\n  const {name} = useSelector(store => store.user);\n  const {error, ingredients} = useSelector(store => store.app);\n  const onCloseError = () => dispatch({type: RESET_ERROR});\n  const hasIngredients = useMemo(() => (ingredients || []).length > 0, [ingredients]);\n\n  const init = async () => {\n    if (!name) {\n      await dispatch(fetchUser());\n    }\n    if (!hasIngredients) {\n      dispatch(getIngredients());\n    }\n    setUserLoaded(true);\n  }\n\n  useEffect(() => {\n    init();\n  }, [])\n\n  useEffect(() => {\n    const forbiddenRoutesForLoggedUser: string[] = [\n      Routes.LOGIN,\n      Routes.SIGNUP,\n      Routes.FORGOT_PASSWORD,\n      Routes.RESET_PASSWORD,\n    ];\n\n    if (name && forbiddenRoutesForLoggedUser.includes(location.pathname)) {\n      history.replace({pathname: Routes.MAIN})\n    }\n  }, [name, history, location.pathname]);\n\n  // @ts-ignore\n  const isModalOpen = location.state && location.state.modal;\n\n  if (!isUserLoaded) {\n    return null;\n  }\n\n  return (\n    <div className=\"text_type_main-default\">\n      <AppHeader/>\n      <main className={Styles.container}>\n        {\n          error &&\n          <div className=\"alertDanger\">\n            <span className=\"errorMessage\">{error}</span>\n            <CloseIcon type=\"primary\" onClick={onCloseError}/>\n          </div>\n        }\n        <Switch location={isModalOpen ?? location}>\n          <Route path={Routes.LOGIN} component={LoginPage} exact/>\n          <Route path={Routes.SIGNUP} component={RegisterPage} exact/>\n          <Route path={Routes.FORGOT_PASSWORD} component={ForgotPasswordPage} exact/>\n          <Route path={Routes.RESET_PASSWORD} component={ResetPasswordPage} exact/>\n          <Route path={Routes.FEED} component={FeedPage} exact/>\n          <Route path={Routes.FEED_VIEW} component={OrderViewPage} exact/>\n\n          <Route path={Routes.MAIN} component={MainPage} exact/>\n          <Route path={Routes.INGREDIENT_VIEW} component={IngredientPage} exact/>\n\n          <ProtectedRoute path={Routes.PROFILE_ORDER_VIEW} exact>\n            <OrderViewPage/>\n          </ProtectedRoute>\n          <ProtectedRoute path={Routes.PROFILE}>\n            <ProfilePage/>\n          </ProtectedRoute>\n          <ProtectedRoute path={Routes.PROFILE_ORDER_LIST} exact>\n            <OrderListPage/>\n          </ProtectedRoute>\n\n          <Route component={NotFoundPage}/>\n        </Switch>\n        {isModalOpen && <Route path={Routes.INGREDIENT_VIEW} component={ModalIngredientDetails} exact/>}\n        {isModalOpen && <Route path={Routes.FEED_VIEW} component={ModalOrderDetails} exact/>}\n        {\n          isModalOpen &&\n          <ProtectedRoute path={Routes.PROFILE_ORDER_VIEW} exact>\n            <ModalOrderDetails/>\n          </ProtectedRoute>\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Reducer} from 'redux';\nimport {TAppStore} from '../../types/stores';\nimport {TAppActions} from '../actions/app';\nimport {FETCH_INGREDIENTS_ERROR, FETCH_INGREDIENTS_SUCCESS, RESET_ERROR, SET_ERROR} from '../constants';\n\nconst initialState: TAppStore = {\n  error: null,\n  ingredients: [],\n}\n\nexport const app: Reducer<TAppStore, TAppActions> = (state = initialState, action): TAppStore => {\n  switch (action.type) {\n    case SET_ERROR:\n      return {...state, error: action.error};\n    case FETCH_INGREDIENTS_SUCCESS:\n      return {...state, ingredients: action.ingredients};\n    case FETCH_INGREDIENTS_ERROR:\n      return initialState;\n    case RESET_ERROR:\n      return {...state, error: null};\n    default:\n      return state;\n  }\n}\n","import {Reducer} from 'redux';\nimport {Types} from '../../enums';\nimport {ConstructorItem} from '../../types';\nimport TBurgerConstructorStore from '../../types/stores/TBurgerConstructorStore';\nimport {TBurgerConstructorActions} from '../actions/burgerConstructor';\nimport {\n  ADD_INGREDIENT_TO_ORDER,\n  MOVE_INGREDIENTS,\n  REMOVE_INGREDIENT_FROM_ORDER,\n  RESET_CURRENT_ORDER,\n  SET_NUMBER,\n} from '../constants';\n\nconst initialState: TBurgerConstructorStore = {\n  currentOrder: null,\n}\n\nexport const burgerConstructor: Reducer<TBurgerConstructorStore, TBurgerConstructorActions> = (state = initialState, action): TBurgerConstructorStore => {\n  switch (action.type) {\n    case RESET_CURRENT_ORDER:\n      return initialState;\n    case ADD_INGREDIENT_TO_ORDER:\n      const value: ConstructorItem = action.value;\n      if (!state.currentOrder) {\n        return {...state, currentOrder: {ingredients: [value]}};\n      }\n\n      let {ingredients} = state.currentOrder;\n      const isBun = value.type === Types.BUN;\n      const hasBuns = ingredients.some(_ => _.type === Types.BUN);\n\n      if (isBun) {\n        // замена булки\n        ingredients = ingredients.map(_ => _.position === value.position && _.type === value.type ? value : _);\n        // добавление\n        const existBun = ingredients.some(_ => _.position === value.position && _.type === value.type);\n        if (!existBun) {\n          const isTop = value.position === 'top';\n          isTop ? ingredients.splice(0, 0, value) : ingredients.push(value);\n        }\n      } else {\n        ingredients.splice(hasBuns ? ingredients.length - 1 : ingredients.length, 0, value);\n      }\n\n      return {...state, currentOrder: {ingredients}};\n    case REMOVE_INGREDIENT_FROM_ORDER:\n      const removeFn = () => {\n        if (!state.currentOrder) {\n          return state;\n        }\n\n        const {ingredients} = state.currentOrder;\n\n        return {\n          ...state,\n          currentOrder: {\n            ingredients: ingredients.filter(item => item.uniqueId !== action.value),\n          },\n        }\n      }\n      return removeFn();\n    case MOVE_INGREDIENTS:\n      const moveFn = () => {\n        if (!state.currentOrder) {\n          return state;\n        }\n\n        const {dragIndex, hoverIndex} = action;\n        const ingredients = [...state.currentOrder.ingredients];\n        const dragIngredient = ingredients[dragIndex];\n\n        ingredients.splice(dragIndex, 1);\n        ingredients.splice(hoverIndex, 0, dragIngredient);\n\n        return {...state, currentOrder: {ingredients}};\n      }\n      return moveFn();\n    case SET_NUMBER:\n      return {...state, number: action.number};\n    default:\n      return state;\n  }\n}\n","import {Reducer} from 'redux';\nimport {TDetailModalStore} from '../../types/stores';\nimport {TDetailModalActions} from '../actions/detailModal';\nimport {RESET_INGREDIENT, SET_INGREDIENT, TOGGLE_MODAL} from '../constants';\n\nconst initialState: TDetailModalStore = {\n  showModal: false,\n  ingredient: null,\n}\n\nexport const detailModal: Reducer<TDetailModalStore, TDetailModalActions> = (state = initialState, action): TDetailModalStore => {\n  switch (action.type) {\n    case TOGGLE_MODAL:\n      return {...state, showModal: action.value};\n    case SET_INGREDIENT:\n      return {...state, ingredient: action.ingredient};\n    case RESET_INGREDIENT:\n      return {...state, ingredient: null};\n    default:\n      return state;\n  }\n}\n","import {Reducer} from 'redux';\nimport {Order} from '../../types';\nimport {TOrderStore} from '../../types/stores';\nimport {TOrderActions} from '../actions/order';\nimport {CREATE_ORDER_ERROR, CREATE_ORDER_SUCCESS} from '../constants';\n\nconst initialState: TOrderStore = {\n  orders: [],\n}\n\nexport const order: Reducer<TOrderStore, TOrderActions> = (state = initialState, action): TOrderStore => {\n  switch (action.type) {\n    case CREATE_ORDER_SUCCESS:\n      const order: Order = action.order;\n      return {...state, orders: [...state.orders, order]};\n    case CREATE_ORDER_ERROR:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import {Reducer} from 'redux';\nimport TOrderHistoryStore from '../../types/stores/TOrderHistoryStore';\nimport {TOrderHistoryActions} from '../actions/orderHistory';\nimport {SET_ORDER_HISTORY, SET_ORDER_SUCCESS} from '../constants';\n\nconst initialState: TOrderHistoryStore = {\n  orders: [],\n}\nexport const orderHistory: Reducer<TOrderHistoryStore, TOrderHistoryActions> = (state = initialState, action): TOrderHistoryStore => {\n  switch (action.type) {\n    case SET_ORDER_HISTORY:\n      return {\n        ...state,\n        orders: action.data.orders,\n        total: action.data.total,\n        totalToday: action.data.totalToday,\n      };\n    case SET_ORDER_SUCCESS:\n      return {\n        ...state,\n        current: action.current,\n      };\n    default:\n      return state;\n  }\n}\n","import {Reducer} from 'redux';\nimport {TResetPasswordStore} from '../../types/stores';\nimport {TResetPasswordActions} from '../actions/resetPassword';\nimport {\n  CONFIRM_PASSWORD_RESET_ERROR,\n  CONFIRM_PASSWORD_RESET_SUCCESS,\n  PASSWORD_RESET_ERROR,\n  PASSWORD_RESET_SUCCESS,\n} from '../constants';\n\nconst initialState: TResetPasswordStore = {\n  isSendForgotPassword: false,\n}\n\nexport const resetPassword: Reducer<TResetPasswordStore, TResetPasswordActions> = (state = initialState, action): TResetPasswordStore => {\n  switch (action.type) {\n    case PASSWORD_RESET_SUCCESS:\n      return {...state, isSendForgotPassword: true};\n    case CONFIRM_PASSWORD_RESET_SUCCESS:\n    case PASSWORD_RESET_ERROR:\n    case CONFIRM_PASSWORD_RESET_ERROR:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import {Reducer} from 'redux';\nimport {TSocketStore} from '../../types/stores';\nimport {TSocketActions} from '../actions/socket';\nimport {SOCKET_CLOSE, SOCKET_OPEN} from '../constants';\n\nconst initialState: TSocketStore = {\n  isConnected: false,\n}\n\nexport const socketReducer: Reducer<TSocketStore, TSocketActions> = (state, action): TSocketStore => {\n  switch (action.type) {\n    case SOCKET_OPEN:\n      return { isConnected: true };\n    case SOCKET_CLOSE:\n      return { isConnected: false };\n    default:\n      return initialState;\n  }\n}\n","import {Reducer} from 'redux';\nimport {TUserStore} from '../../types/stores';\nimport {TUserActions} from '../actions/user';\nimport {\n  FETCH_USER_SUCCESS,\n  LOGIN_ERROR,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  SIGNUP_SUCCESS,\n  UPDATE_USER_SUCCESS,\n} from '../constants';\n\nconst initialState: TUserStore = {\n  email: '',\n  name: '',\n  password: '',\n}\n\nexport const user: Reducer<TUserStore, TUserActions> = (state = initialState, action): TUserStore => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n    case SIGNUP_SUCCESS:\n    case FETCH_USER_SUCCESS:\n    case UPDATE_USER_SUCCESS:\n      return {...state, ...action.user};\n    case LOGIN_ERROR:\n    case LOGOUT_SUCCESS:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport {app} from './app';\nimport {burgerConstructor} from './burgerConstructor';\nimport {detailModal} from './detailModal';\nimport {order} from './order';\nimport {orderHistory} from './orderHistory';\nimport {resetPassword} from './resetPassword';\nimport {socketReducer} from './socket';\nimport {user} from './user';\n\nexport const rootReducer = combineReducers({\n  app,\n  burgerConstructor,\n  detailModal,\n  order,\n  orderHistory,\n  resetPassword,\n  socketReducer,\n  user,\n});\n","import {applyMiddleware, compose, createStore, StoreEnhancer} from 'redux';\nimport thunk from 'redux-thunk';\nimport {rootReducer} from './root';\n\nconst composeEnhancers =\n  typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst enhancer: StoreEnhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(rootReducer, enhancer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './services/reducers';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order-short_order__2Qo8F\",\"header\":\"order-short_header__3nmlR\",\"created\":\"order-short_created__3UJDF\",\"title\":\"order-short_title__1xV5z\",\"done\":\"order-short_done__3sTl8\",\"receipt\":\"order-short_receipt__3iM3T\",\"ingredients\":\"order-short_ingredients__22kN1\",\"imgBlock\":\"order-short_imgBlock__1LvpG\",\"more\":\"order-short_more__1PNGn\",\"cost\":\"order-short_cost__1OtEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-detail_container__4ygnl\",\"orderDetail\":\"order-detail_orderDetail__3bA_C\",\"orderNumber\":\"order-detail_orderNumber__1VfAZ\",\"orderName\":\"order-detail_orderName__FYDgD\",\"done\":\"order-detail_done__1AgXA\",\"receipt\":\"order-detail_receipt__ic_5y\",\"imgBlock\":\"order-detail_imgBlock__3UmKv\",\"ingredient\":\"order-detail_ingredient__1wX8Z\",\"ingredientName\":\"order-detail_ingredientName__3h4a1\",\"price\":\"order-detail_price__1P6ny\",\"footer\":\"order-detail_footer__8TGU5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"feed_feed__3qXwX\",\"orderList\":\"feed_orderList__d5DMQ\",\"stats\":\"feed_stats__2asQ0\",\"ordersByStatus\":\"feed_ordersByStatus__kqnOO\",\"numberList\":\"feed_numberList__jvDHZ\",\"done\":\"feed_done__i9bek\",\"counter\":\"feed_counter__2Zl3l\",\"counterTitle\":\"feed_counterTitle__XKNKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"ingredient-details_body__3Gr9B\",\"imgBlock\":\"ingredient-details_imgBlock__VyKuR\",\"name\":\"ingredient-details_name__yivka\",\"composition\":\"ingredient-details_composition__3yAjI\",\"compositionItem\":\"ingredient-details_compositionItem__ICZ8O\",\"compositionValue\":\"ingredient-details_compositionValue__33O2h\",\"content\":\"ingredient-details_content__2oxBJ\",\"header\":\"ingredient-details_header__2KIpI\",\"page\":\"ingredient-details_page__1wQfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructorSection\":\"burger-constructor_constructorSection__331_b\",\"list\":\"burger-constructor_list__2e3gb\",\"listEmpty\":\"burger-constructor_listEmpty__253Y6\",\"listEmptyHover\":\"burger-constructor_listEmptyHover__2dEjR\",\"firstItem\":\"burger-constructor_firstItem__3MQp5\",\"lastItem\":\"burger-constructor_lastItem__kZjeK\",\"cost\":\"burger-constructor_cost__JRzNu\",\"constructorFooter\":\"burger-constructor_constructorFooter__3xeG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"order-details_content__20Pzk\",\"body\":\"order-details_body__P_0Ub\",\"orderNumber\":\"order-details_orderNumber__21Dhu\",\"orderTitle\":\"order-details_orderTitle__21BCp\",\"icon\":\"order-details_icon__1E-Q_\",\"description\":\"order-details_description__fl1LJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"burger-ingredients_list__2qHfU\",\"tabBlock\":\"burger-ingredients_tabBlock__3kPRr\",\"tabContent\":\"burger-ingredients_tabContent__2QSfk\",\"ingredientGroup\":\"burger-ingredients_ingredientGroup__2rWOF\",\"title\":\"burger-ingredients_title__25UcL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"edit-profile_profile__2cmbn\",\"input\":\"edit-profile_input__2uJfY\",\"actions\":\"edit-profile_actions__jL5bh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2LGpc\",\"modalDialog\":\"modal_modalDialog__16ZDq\",\"modalContent\":\"modal_modalContent__2COXU\",\"closeButton\":\"modal_closeButton__3_1tk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"item_item__2emh7\",\"bun\":\"item_bun__2S9Jf\",\"icon\":\"item_icon__3xT9M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__1lfUI\",\"price\":\"ingredient_price__1dGwZ\",\"content\":\"ingredient_content__ixDzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__3BdxE\",\"login\":\"login_login__1IIqf\",\"input\":\"login_input__3KY-6\",\"btnLogin\":\"login_btnLogin__jAaCC\",\"firstLine\":\"login_firstLine__1n6lT\",\"secondLine\":\"login_secondLine__8h48E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main_container__2UF3P\",\"body\":\"main_body__2xhbC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeLink\":\"sidebar_activeLink__1LZdF\"};"],"sourceRoot":""}